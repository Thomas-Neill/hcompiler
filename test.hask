wrap(x:int) -> {nil:{}|x:int} = unionize<{nil:{}|x:int}>(x=x);
null() -> {nil:{}|x:int} = unionize<{nil:{}|x:int}>(nil={});
safeadd(foo:{nil:{}|x:int}) -> {nil:{}|x:int} =
  case {foo} of {
    ignore:(nil:{}) = null();
    x:(x:int) = wrap(x+10);
};
unwrap(bar:{nil:{}|x:int}) -> int =
  case {bar} of {
    ignore:(nil:{}) = 0;
    x:(x:int) = x;
};

main() -> int = unwrap(safeadd(null())) + unwrap(safeadd(wrap(20)));
